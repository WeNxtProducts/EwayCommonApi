/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;

import java.util.Collections;
import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.DropdownCommonRes;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.PremiaConfigDataMasterChangeStatusReq;
import com.maan.eway.master.req.PremiaConfigDataMasterGetReq;
import com.maan.eway.master.req.PremiaConfigDataMasterGetallReq;
import com.maan.eway.master.req.PremiaConfigDataMasterSaveReq;
import com.maan.eway.master.req.PremiaConfigMasterDropDownReq;
import com.maan.eway.master.res.PremiaConfigDataMasterGetRes;
import com.maan.eway.master.res.PremiaConfigDataMasterGetallRes;
import com.maan.eway.master.service.PremiaConfigDataMasterService;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@RestController
@Api(tags = "MASTER : Premia Config Data ", description = "API's")
@RequestMapping("/master")
public class PremiaConfigDataMasterController {

	@Autowired
	private PremiaConfigDataMasterService service;

	@Autowired
	private PrintReqService reqPrinter;

	// save
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/insertpremiaconfigdata")
	@ApiOperation(value = "This method is Insert Premia Config Data")
	public ResponseEntity<CommonRes> insertPremiaConfigData(@RequestBody PremiaConfigDataMasterSaveReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		List<Error> validation = service.validatePremiaConfigData(req);
		// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {

			// Get All
			SuccessRes res = service.insertPremiaConfigData(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}

	// Get
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getpremiaconfigdata")
	@ApiOperation(value = "This method is Get Premia Config Data")
	public ResponseEntity<CommonRes> getPremiaConfigData(@RequestBody PremiaConfigDataMasterGetReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		PremiaConfigDataMasterGetRes res = service.getPremiaConfigData(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	// GetAll
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getallpremiaconfigdata")
	@ApiOperation(value = "This method is Getall Premia Config Data")
	public ResponseEntity<CommonRes> getallPremiaConfigData(@RequestBody PremiaConfigDataMasterGetallReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		PremiaConfigDataMasterGetallRes res = service.getallPremiaConfigData(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	// GetActive
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getactivepremiaconfigdata")
	@ApiOperation(value = "This method is Getactive Premia Config Data")
	public ResponseEntity<CommonRes> getactivePremiaConfigData(@RequestBody PremiaConfigDataMasterGetallReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		PremiaConfigDataMasterGetallRes res = service.getactivePremiaConfigData(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	// Premia Config Master Drop Down Type
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping(value = "/dropdown/premiaconfigdata", produces = "application/json")
	@ApiOperation(value = "This method is get Premia Config Data Master Drop Down")

	public ResponseEntity<DropdownCommonRes> getPremiaConfigDataMasterDropdown(
			@RequestBody PremiaConfigDataMasterGetallReq req) {

		DropdownCommonRes data = new DropdownCommonRes();

		// Save
		List<DropDownRes> res = service.getPremiaConfigDataMasterDropdown(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}

	}

	// Change Status
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/changestatuspremiaconfigdata")
	@ApiOperation(value = "This method is Change Status Premia Config Data")
	public ResponseEntity<CommonRes> changeStatusPremiaConfigData(@RequestBody PremiaConfigDataMasterChangeStatusReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		SuccessRes res = service.changeStatusPremiaConfigData(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	
	
}
