/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;

import java.util.Collections;
import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.req.CommonErrorModuleReq;
import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.DropdownCommonRes;
import com.maan.eway.common.service.impl.FetchErrorDescServiceImpl;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.ClausesMasterDropdownReq;
import com.maan.eway.master.req.PremiaConfigMasterChangeStatusReq;
import com.maan.eway.master.req.PremiaConfigMasterDropDownReq;
import com.maan.eway.master.req.PremiaConfigMasterGetAllReq;
import com.maan.eway.master.req.PremiaConfigMasterGetReq;
import com.maan.eway.master.req.PremiaConfigMasterSaveReq;
import com.maan.eway.master.req.PremiaTableColumnDropDownReq;
import com.maan.eway.master.res.PremiaConfigMasterRes;
import com.maan.eway.master.service.PremiaConfigMasterService;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@RestController
@Api(tags = "MASTER : Premia Config Master ", description = "API's")
@RequestMapping("/master")
public class PremiaConfigMasterController {

	@Autowired
	private PremiaConfigMasterService service;

	@Autowired
	private PrintReqService reqPrinter;

	@Autowired
	private FetchErrorDescServiceImpl errorDescService ;
	
	// save
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/insertpremiaconfig")
	@ApiOperation(value = "This method is Insert Premia Config Master")
	public ResponseEntity<CommonRes> insertPremiaConfig(@RequestBody PremiaConfigMasterSaveReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<String> validationCodes = service.validatePremiaConfig(req);
		List<Error> validation = null;
		if(validationCodes!=null && validationCodes.size() > 0 ) {
			CommonErrorModuleReq comErrDescReq = new CommonErrorModuleReq();
			comErrDescReq.setBranchCode(req.getBranchCode());
			comErrDescReq.setInsuranceId(req.getCompanyId());
			comErrDescReq.setProductId("99999");
			comErrDescReq.setModuleId("31");
			comErrDescReq.setModuleName("MASTERS");
			
			validation = errorDescService.getErrorDesc(validationCodes ,comErrDescReq);
		}

		// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {

			// Get All
			SuccessRes res = service.insertPremiaConfig(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}

	//Get Premia Config
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getpremiaconfig")
	@ApiOperation("This method is get Premia Config")
	public ResponseEntity<CommonRes> getPremiaConfig(@RequestBody PremiaConfigMasterGetReq req) {
		CommonRes data = new CommonRes();
		reqPrinter.reqPrint(req);

		PremiaConfigMasterRes res = service.getPremiaConfig(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	//Getall Premia Config
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getallpremiaconfig")
	@ApiOperation("This method is getall Premia Config")
	public ResponseEntity<CommonRes> getallPremiaConfig(@RequestBody PremiaConfigMasterGetAllReq req) {
		CommonRes data = new CommonRes();
		reqPrinter.reqPrint(req);

		List<PremiaConfigMasterRes> res = service.getallPremiaConfig(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	//Getactive Premia Config
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getactivepremiaconfig")
	@ApiOperation("This method is getactive Premia Config")
	public ResponseEntity<CommonRes> getactivePremiaConfig(@RequestBody PremiaConfigMasterGetAllReq req) {
		CommonRes data = new CommonRes();
		reqPrinter.reqPrint(req);

		List<PremiaConfigMasterRes> res = service.getactivePremiaConfig(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	
	//Change Status Premia Config
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/changestatuspremiaconfig")
	@ApiOperation("This method is Change Status Premia Config")
	public ResponseEntity<CommonRes> changeStatusPremiaConfig(@RequestBody PremiaConfigMasterChangeStatusReq req) {
		CommonRes data = new CommonRes();
		reqPrinter.reqPrint(req);

		SuccessRes res = service.changeStatusPremiaConfig(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	
	//Premia Config Master Drop Down Type
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping(value="/dropdown/premiaconfig",produces = "application/json")
	@ApiOperation(value = "This method is get Premia Config Master Drop Down")

	public ResponseEntity<DropdownCommonRes> getPremiaConfigMasterDropdown(@RequestBody PremiaConfigMasterDropDownReq req) {

		DropdownCommonRes data = new DropdownCommonRes();

		// Save
		List<DropDownRes> res = service.getPremiaConfigMasterDropdown(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}

	}
	//Premia Table Column
		@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping(value="/dropdown/premiacolumn",produces = "application/json")
		@ApiOperation(value = "This method is get Premia Table Column Drop Down")

		public ResponseEntity<DropdownCommonRes> getPremiaTableDropdown(@RequestBody PremiaTableColumnDropDownReq req) {

			DropdownCommonRes data = new DropdownCommonRes();

			// Save
			List<DropDownRes> res = service.getPremiaTableDropdown(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}

}
