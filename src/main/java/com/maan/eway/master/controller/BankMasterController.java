/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.error.Error;
import com.maan.eway.master.req.BankChangeStatusReq;
import com.maan.eway.master.req.BankMasterGetAllReq;
import com.maan.eway.master.req.BankMasterGetReq;
import com.maan.eway.master.req.BankMasterSaveReq;
import com.maan.eway.master.res.BankMasterRes;
import com.maan.eway.master.service.BankMasterService;
import com.maan.eway.common.req.CommonErrorModuleReq;
import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.DropdownCommonRes;
import com.maan.eway.common.service.impl.FetchErrorDescServiceImpl;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * <h2>BankMasterController</h2>
 */
@RestController
@Api(tags = "MASTER : Bank Master ", description = "API's")
@RequestMapping("/master")
public class BankMasterController {

	@Autowired
	private BankMasterService bankService;

	@Autowired
	private PrintReqService reqPrinter;
	
	@Autowired
	private FetchErrorDescServiceImpl errorDescService ;

	// save
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_ADMIN')")
	@PostMapping("/insertbank")
	@ApiOperation(value = "This method is Insert Bank Details")
	public ResponseEntity<CommonRes> insertBank(@RequestBody BankMasterSaveReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<String> validationCodes = bankService.validateBankDetails(req);
		List<Error> validation = null;
		if(validationCodes!=null && validationCodes.size() > 0 ) {
			CommonErrorModuleReq comErrDescReq = new CommonErrorModuleReq();
			comErrDescReq.setBranchCode(req.getBranchCode());
			comErrDescReq.setInsuranceId(req.getCompanyId());
			comErrDescReq.setProductId("99999");
			comErrDescReq.setModuleId("31");
			comErrDescReq.setModuleName("MASTERS");
			
			validation = errorDescService.getErrorDesc(validationCodes ,comErrDescReq);
		}
		// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {

			// Get All
			SuccessRes res = bankService.insertBank(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}

	// Get All Bank Master
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getallbankdetails")
	@ApiOperation("This method is getall Bank Details")
	public ResponseEntity<CommonRes> getallBankDetails(@RequestBody BankMasterGetAllReq req) {
		CommonRes data = new CommonRes();
		reqPrinter.reqPrint(req);

		List<BankMasterRes> res = bankService.getallBankDetails(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	// Get Active Bank Master
	@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER',ROLE_USER)")
	@PostMapping("/getactivebank")
	@ApiOperation("This method is get Active Bank Details")
	public ResponseEntity<CommonRes> getActiveBankDetails(@RequestBody BankMasterGetAllReq req) {
		CommonRes data = new CommonRes();
		reqPrinter.reqPrint(req);

		List<BankMasterRes> res = bankService.getActiveBankDetails(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	// Get By Bank Id
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getbybankid")
	@ApiOperation("This Method is to get by Bank id")
	public ResponseEntity<CommonRes> getByBankCode(@RequestBody BankMasterGetReq req) {
		CommonRes data = new CommonRes();
		BankMasterRes res = bankService.getByBankCode(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}

	// Change Status
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_ADMIN')")
	@PostMapping("/bank/changestatus")
	@ApiOperation(value = "This method is Bank Change Status")
	public ResponseEntity<CommonRes> changeStatusOfBank(@RequestBody BankChangeStatusReq req) {

		CommonRes data = new CommonRes();
		// Change Status
		SuccessRes res = bankService.changeStatusOfBank(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}

	}

	// Bank Master Drop Down Type
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping(value="/dropdown/bankmaster",produces = "application/json")
	@ApiOperation(value = "This method is get Bank Master Drop Down")

	public ResponseEntity<DropdownCommonRes> getBankMasterDropdown(@RequestBody BankChangeStatusReq req) {

		DropdownCommonRes data = new DropdownCommonRes();

		// Save
		List<DropDownRes> res = bankService.getBankMasterDropdown(req);
		data.setCommonResponse(res);
		data.setIsError(false);
		data.setErrorMessage(Collections.emptyList());
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}

	}

}
