/*
*  Copyright (c) 2019. All right reserved
* Created on 2021-07-31 ( Date ISO 2021-07-31 - Time 18:13:34 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.controller;

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.res.CommonRes;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.StateMasterSaveReq;
import com.maan.eway.master.req.TrackingDetailsSaveReq;
import com.maan.eway.master.res.TrackingDetailsRes;
import com.maan.eway.master.service.TrackingDetailsService;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.ApiOperation;



/**
* <h2>TrackingMasterController</h2>
*/
@RestController
@RequestMapping("/api")
public class TrackingDetailsController {

	@Autowired
	private  TrackingDetailsService service;
	@Autowired
	private  PrintReqService reqPrinter;
	
	//GetAll
	@GetMapping("/getalltracking")
	@ApiOperation(value = "This Method is to display all tracking")
	public ResponseEntity<CommonRes> getalltracking() {
		CommonRes data = new CommonRes();
		
		List<TrackingDetailsRes> res = service.getalltracking();
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");
	
		if(res!=null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
		}
		else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
		
	}
    
 // save
 	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER')")
 		@PostMapping("/inserttrackingdetails")
 		@ApiOperation(value = "This method is Insert Tracking Details")
 		public ResponseEntity<CommonRes> insertTrackingDetails(@RequestBody List<TrackingDetailsSaveReq> req) {

 			reqPrinter.reqPrint(req);
 			CommonRes data = new CommonRes();

 			List<Error> validation = service.validateTrackingDetails(req);
 			// validation
 			if (validation != null && validation.size() != 0) {
 				data.setCommonResponse(null);
 				data.setIsError(true);
 				data.setErrorMessage(validation);
 				data.setMessage("Failed");
 				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

 			} else {

 				
 				SuccessRes res = service.insertTrackingDetails(req);
 				data.setCommonResponse(res);
 				data.setIsError(false);
 				data.setErrorMessage(Collections.emptyList());
 				data.setMessage("Success");

 				if (res != null) {
 					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
 				} else {
 					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
 				}
 			}

 		}
    /*
    @PostMapping("/claimrecentactivitiestracking")
    public ResponseEntity<List<TrackingDetailsRes>> getAllClaimRecentActivity(@RequestBody  TrackingDetailsReq req) throws CommonValidationException {
    
    	dateformat.reqPrint(req);
    	
    	List<TrackingDetailsRes> lst = entityService.getAllClaimRecentActivity(req);

        if (lst!=null) {
			return new ResponseEntity<List<TrackingDetailsRes>>(lst,HttpStatus.OK);
		}else {
			return new ResponseEntity<>(HttpStatus.OK);
		 }
    }
  /*  
    @PostMapping("/audittrackingdetails")
    public ResponseEntity<List<TrackingDetailsRes>> trackingdetails(@RequestBody  TrackingDetailsReq req) {
    
    	dateformat.reqPrint(req);
    	
    	List<TrackingDetailsRes> lst = entityService.trackingdetails(req);

        if (lst!=null) {
			return new ResponseEntity<List<TrackingDetailsRes>>(lst,HttpStatus.OK);
		}else {
			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
		 }
    }
    
    @PostMapping("/getfiveaudittrackingdetails")
    public ResponseEntity<List<TrackingDetailsRes>> getfivetrackingdetails(@RequestBody  TrackingDetailsReq req) {
    
    	dateformat.reqPrint(req);
    	
    	List<TrackingDetailsRes> lst = entityService.getfivetrackingdetails(req);

        if (lst!=null) {
			return new ResponseEntity<List<TrackingDetailsRes>>(lst,HttpStatus.OK);
		}else {
			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
		 }
    }
    
    @PostMapping("/getclaimtrackingdetails")
    public ResponseEntity<TrackingDetailsFlowRes> getClaimTrackingDetails(@RequestBody  TrackingDetailsReq req) {
    
    	dateformat.reqPrint(req);
    	
    	TrackingDetailsFlowRes lst = entityService.getClaimTrackingDetails(req);
    	if (lst!=null) {
			return new ResponseEntity<TrackingDetailsFlowRes>(lst,HttpStatus.OK);
		}else {
			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
		 }
    }
    
    @PostMapping("/getapprovedclaims")
    public ResponseEntity<List<RegisteredClaimsRes>> getApprovedClaims(@RequestBody  RegisteredClaimsReq req) {
    
    	dateformat.reqPrint(req);
    	
    	List<RegisteredClaimsRes> lst = entityService.getApprovedClaims(req);
    	if (lst!=null) {
			return new ResponseEntity<List<RegisteredClaimsRes>>(lst,HttpStatus.OK);
		}else {
			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
		 }
    }
    
    @PostMapping("/viewclaimsteps")
    public ResponseEntity<ClaimFlowRes> viewClaimSteps(@RequestBody  ClaimStepsReq req) {
    
    	dateformat.reqPrint(req);
    	
    	ClaimFlowRes lst = entityService.viewClaimSteps(req);
    	if (lst!=null) {
			return new ResponseEntity<ClaimFlowRes>(lst,HttpStatus.OK);
		}else {
			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
		 }
    }
   */ 
}
