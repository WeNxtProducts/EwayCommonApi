package com.maan.eway.master.controller;
/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.req.CommonErrorModuleReq;
import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.DropdownCommonRes;
import com.maan.eway.common.service.impl.FetchErrorDescServiceImpl;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.CountryChangeStatusReq;
import com.maan.eway.master.req.CountryGetAllReq;
import com.maan.eway.master.req.CountryMasterGetReq;
import com.maan.eway.master.req.CountryMasterSaveReq;
import com.maan.eway.master.req.CountryPlansReq;
import com.maan.eway.master.req.LovDropDownReq;
import com.maan.eway.master.res.CountryMasterRes;
import com.maan.eway.master.service.CountryMasterService;
import com.maan.eway.res.DropDownRes;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>CountryMasterController</h2>
*/
@RestController
@RequestMapping("/master")
@Api(tags = "MASTER : Country Master ", description = "API's")
public class CountryMasterController {

	@Autowired
	private  CountryMasterService countryService;
	
	@Autowired
	private  PrintReqService reqPrinter;
	
	@Autowired
	private FetchErrorDescServiceImpl errorDescService ;
	
	// save
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/insertcountry")
		@ApiOperation(value = "This method is Insert Country Details")
		public ResponseEntity<CommonRes> insertCountry(@RequestBody CountryMasterSaveReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<String> validationCodes = countryService.validateCountryDetails(req);
		List<Error> validation = null;
		if(validationCodes!=null && validationCodes.size() > 0 ) {
			CommonErrorModuleReq comErrDescReq = new CommonErrorModuleReq();
			comErrDescReq.setBranchCode("99999");
			comErrDescReq.setInsuranceId(req.getCompanyId());
			comErrDescReq.setProductId("99999");
			comErrDescReq.setModuleId("31");
			comErrDescReq.setModuleName("MASTERS");
			
			validation = errorDescService.getErrorDesc(validationCodes ,comErrDescReq);
		}

			
			// validation
			if (validation != null && validation.size() != 0) {
				data.setCommonResponse(null);
				data.setIsError(true);
				data.setErrorMessage(validation);
				data.setMessage("Failed");
				return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

			} else {

				// Get All
				SuccessRes res = countryService.insertCountry(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}
			}

		}
		
		//  Get All Country Master
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/getallcountrydetails")
		@ApiOperation("This method is getall Country Details")
		public ResponseEntity<CommonRes> getallCountryDetails(@RequestBody CountryGetAllReq req )
		{
			CommonRes data = new CommonRes();	
			List<CountryMasterRes> res = countryService.getallCountryDetails(req);
			data.setCommonResponse(res);
			data.setErrorMessage(Collections.emptyList());
			data.setIsError(false);
			data.setMessage("Success");
			
			if(res!= null) {
				return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
			}
			else {
				return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
			}
		}
		
	//  Get Active Country Master
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/getactivecountry")
			@ApiOperation("This method is get Active Country Details")
			public ResponseEntity<CommonRes> getActiveCountryDetails(@RequestBody CountryGetAllReq req )
			{
				CommonRes data = new CommonRes();
				
				List<CountryMasterRes> res = countryService.getActiveCountryDetails(req);
				data.setCommonResponse(res);
				data.setErrorMessage(Collections.emptyList());
				data.setIsError(false);
				data.setMessage("Success");
				
				if(res!= null) {
					return new ResponseEntity<CommonRes> (data, HttpStatus.CREATED);
				}
				else {
					return new ResponseEntity<> (null, HttpStatus.BAD_REQUEST);
				}
			}
		
		// Get By Country Id
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/getbycountryid")
		@ApiOperation("This Method is to get by Country id")
		public ResponseEntity<CommonRes> getByCountryId(@RequestBody CountryMasterGetReq req)
		{
		CommonRes data = new CommonRes();
		CountryMasterRes res = countryService.getByCountryId(req);
		data.setCommonResponse(res);
		data.setErrorMessage(Collections.emptyList());
		data.setIsError(false);
		data.setMessage("Success");

		if (res != null) {
			return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);

		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
		// Country Master Drop Down Type
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping(value="/dropdown/country",produces = "application/json")
		@ApiOperation(value = "This method is get Country Master Drop Down")

		public ResponseEntity<DropdownCommonRes> getCountryMasterDropdown(@RequestBody LovDropDownReq req) {

			DropdownCommonRes data = new DropdownCommonRes();

			// Save
			List<DropDownRes> res = countryService.getCountryMasterDropdown(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")		
			@PostMapping(value="/dropdown/nationality",produces = "application/json")
			@ApiOperation(value = "This method is get Country Master Drop Down")

			public ResponseEntity<DropdownCommonRes> getNationalityMasterDropdown(@RequestBody LovDropDownReq req) {

				DropdownCommonRes data = new DropdownCommonRes();

				// Save
				List<DropDownRes> res = countryService.getNationalityMasterDropdown(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");

				if (res != null) {
					return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}

			}

		@PostMapping("/country/changestatus")
		@ApiOperation(value = "This method is get Country Change Status")
		public ResponseEntity<CommonRes> changeStatusOfCountry(@RequestBody CountryChangeStatusReq req) {

			CommonRes data = new CommonRes();
			// Change Status
			SuccessRes res = countryService.changeStatusOfCountry(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}
		
		
		@PreAuthorize("hasAnyRole('ROLE_ADMIN','ROLE_APPROVER','ROLE_USER')")
		@PostMapping(value="/dropdown/countryplans",produces = "application/json")
		@ApiOperation(value = "This method is get Product Section Cover Master Drop Down")

		public ResponseEntity<DropdownCommonRes> getCountryPlansDropdown(@RequestBody CountryPlansReq req) {

			DropdownCommonRes data = new DropdownCommonRes();

			// Save
			List<DropDownRes> res = countryService.getCountryPlansDropdown(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<DropdownCommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}

		}
}
