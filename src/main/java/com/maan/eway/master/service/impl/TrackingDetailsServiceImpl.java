/*
*  Copyright (c) 2019. All right reserved
* Created on 2021-07-31 ( Date ISO 2021-07-31 - Time 18:13:34 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.master.service.impl;

import java.math.BigDecimal;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;
import java.util.function.Predicate;
import java.util.stream.Collectors;

import org.apache.commons.lang3.StringUtils;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.dozer.DozerBeanMapper;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.google.gson.Gson;
import com.maan.eway.bean.ListItemValue;
import com.maan.eway.bean.SeqPolicyno;
import com.maan.eway.bean.SeqTrackingId;
import com.maan.eway.bean.TrackingDetails;
import com.maan.eway.error.Error;
import com.maan.eway.master.req.TrackingDetailsSaveReq;
import com.maan.eway.master.res.TrackingDetailsRes;
import com.maan.eway.master.service.TrackingDetailsService;
import com.maan.eway.repository.ListItemValueRepository;
import com.maan.eway.repository.SeqTrackingRepository;
import com.maan.eway.repository.TrackingDetailsRepository;
import com.maan.eway.res.SuccessRes;
/**
* <h2>TrackingMasterServiceimpl</h2>
* 
*/
@Service
@Transactional
public class TrackingDetailsServiceImpl implements TrackingDetailsService {

@Autowired
private TrackingDetailsRepository repo;

@Autowired
private ListItemValueRepository livRepo;

@Autowired
private SeqTrackingRepository seqTracRepo; 


private Logger log=LogManager.getLogger(TrackingDetailsServiceImpl.class);
Gson json = new Gson();

SimpleDateFormat sdfFormat = new SimpleDateFormat("ddMMyyyyhhmmss");

//SAVE
	@Override
	public	synchronized SuccessRes insertTrackingDetails(List<TrackingDetailsSaveReq> reqList) {
		SuccessRes res = new SuccessRes();
		DozerBeanMapper dozerMapper = new DozerBeanMapper();
		 try {
			 Date today = new Date();
			 ListItemValue  listItemValue =null;
			 String trackingId="";
			
			for(TrackingDetailsSaveReq req :reqList) {
				 TrackingDetails saveData = new TrackingDetails();
				listItemValue =livRepo.findByItemTypeAndItemCode("TRACKING_STATUS",req.getStatus());
				trackingId =generateTrackingId() ;
				dozerMapper.map(req, saveData);
				saveData.setTrackingId(trackingId);
				saveData.setRequestReferenceNo(req.getRequestReferenceNo());
				saveData.setBranchCode(req.getBranchCode());
				saveData.setProductId(req.getProductId());
				saveData.setRequestReferenceNo(req.getRequestReferenceNo());
				saveData.setCreatedBy(req.getCreatedby());
				saveData.setEntryDate(today);
				saveData.setCompanyId(req.getCompanyId());
				saveData.setRemarks(req.getRemarks());
				saveData.setStatus(req.getStatus());
				saveData.setStatusDesc(listItemValue.getItemValue());
				repo.saveAndFlush(saveData);
				log.info("Saved Details is ---> " + json.toJson(saveData));
		 }
			
				res.setResponse("Saved Successfully ");
				res.setSuccessId(trackingId);
			
		 }  catch(Exception e) {
			 e.printStackTrace();
			 log.info("Exception Is --->" + e.getMessage());
			 return null;
		 }
		return res;
	}

	public synchronized String generateTrackingId() {
	       try {
	    	   SeqTrackingId entity;
	            entity = seqTracRepo.save(new SeqTrackingId());    
	            String year =  sdfFormat.format(new Date()) ;
	            return "TRACK"+String.format("%05d",entity.getTrackingId()) ;
	        } catch (Exception e) {
				e.printStackTrace();
				log.info( "Exception is ---> " + e.getMessage());
	            return null;
	        }
	       
	 
	 }
@Override
public List<Error> validateTrackingDetails(List<TrackingDetailsSaveReq> req) {
	// TODO Auto-generated method stub
	return null;
}

@Override
public List<TrackingDetailsRes> getalltracking() {
	List<TrackingDetailsRes> resList = new ArrayList<TrackingDetailsRes>();
	ModelMapper mapper = new ModelMapper();
	try {
		List<TrackingDetails> trackingdetails = repo.OrderByEntryDateDesc();
		for(TrackingDetails data : trackingdetails) {
			TrackingDetailsRes res = new TrackingDetailsRes();
			res = mapper.map(data, TrackingDetailsRes.class);
			resList.add(res);
		}
	}
	catch(Exception e) {
		e.printStackTrace();
		log.info("Log Details"+e.getMessage());
		return null;
	}
	return resList;

}


}
