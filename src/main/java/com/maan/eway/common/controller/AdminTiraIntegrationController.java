/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-09-02 ( Date ISO 2022-09-02 - Time 18:14:51 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.eway.common.controller;

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.req.AdminTiraIntegrationGridReq;
import com.maan.eway.common.req.ExistingQuoteReq;
import com.maan.eway.common.res.AdminTiraIntegrationGirdRes;
import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.TiraRes;
import com.maan.eway.common.service.AdminTiraIntegrationService;
import com.maan.eway.error.Error;


import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>AdminTiraIntegrationController</h2>
*/
@RestController
@RequestMapping("/api")
@Api(tags = "ADMIN  : Tira Integration Grid ", description = "API's")
public class AdminTiraIntegrationController {
	@Autowired
	private AdminTiraIntegrationService entityService;

	@Autowired
	private  PrintReqService reqPrinter;
	
	
	//Success
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/tirasuccess")
	public ResponseEntity<CommonRes> getallTirasuccess(@RequestBody  AdminTiraIntegrationGridReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<AdminTiraIntegrationGirdRes> res = entityService.getallTiraSuccess(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}
	
	//Pending
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/tirapending")
	public ResponseEntity<CommonRes> getallTiraPending(@RequestBody  AdminTiraIntegrationGridReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<AdminTiraIntegrationGirdRes> res = entityService.getallTiraPending(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}
	
	
	// Tira Failure
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/tirafailure")
	public ResponseEntity<CommonRes> getallTiraFailure(@RequestBody  AdminTiraIntegrationGridReq req) {
		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();
		List<AdminTiraIntegrationGirdRes> res = entityService.getallTiraFailure(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	// Tira View
		@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
		@PostMapping("/tiraview")
		public ResponseEntity<CommonRes> getallTiraDetails(@RequestBody  AdminTiraIntegrationGridReq req) {
			reqPrinter.reqPrint(req);
			CommonRes data = new CommonRes();
			List<TiraRes> res = entityService.getallTiraDetails(req);
				data.setCommonResponse(res);
				data.setIsError(false);
				data.setErrorMessage(Collections.emptyList());
				data.setMessage("Success");
				if (res != null) {
					return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
				} else {
					return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
				}
			}
}
