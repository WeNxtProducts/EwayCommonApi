package com.maan.eway.common.controller;
/*
*  Copyright (c) 2019. All right reserved
* Created on 2022-08-24 ( Date ISO 2022-08-24 - Time 12:58:26 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/

import java.util.Collections;
import java.util.List;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.eway.common.req.UwQuestionsDetailsGetReq;
import com.maan.eway.common.req.UwQuestionsDetailsSaveReq;
import com.maan.eway.common.res.CommonRes;
import com.maan.eway.common.res.UwQuestionsDetailsRes;
import com.maan.eway.common.service.UwQuestionsDetailsService;
import com.maan.eway.error.Error;
import com.maan.eway.res.SuccessRes;
import com.maan.eway.service.PrintReqService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;


/**
* <h2>ProductMasterController</h2>
*/
@RestController
@RequestMapping("/api")
@Api(tags = "1. GLOBAL CONFIG : UW Questions Details ", description = "API's")
public class UwQuestionsDetailsController {

	@Autowired
	private  UwQuestionsDetailsService uwService;
	
	@Autowired
	private  PrintReqService reqPrinter;
	
	// save
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/saveuwquestions")
	@ApiOperation(value = "This method is Save UW Questions")
	public ResponseEntity<CommonRes> saveUwQuestions(@RequestBody List<UwQuestionsDetailsSaveReq> req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		List<Error> validation = uwService.validateUwQuestions(req);
		// validation
		if (validation != null && validation.size() != 0) {
			data.setCommonResponse(null);
			data.setIsError(true);
			data.setErrorMessage(validation);
			data.setMessage("Failed");
			return new ResponseEntity<CommonRes>(data, HttpStatus.OK);

		} else {

			// Get All
			SuccessRes res = uwService.saveUwQuestions(req);
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");

			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}

	}
	@PreAuthorize("hasAnyRole('ROLE_APPROVER','ROLE_USER','ROLE_ADMIN')")
	@PostMapping("/getuwquestionsdetails")
	@ApiOperation(value = "This method is Get UW Questions Details")
	public ResponseEntity<CommonRes> getUwQuestionsDetails(@RequestBody UwQuestionsDetailsGetReq req) {

		reqPrinter.reqPrint(req);
		CommonRes data = new CommonRes();

		List<UwQuestionsDetailsRes> res = uwService.getUwQuestionsDetails(req);
		
			data.setCommonResponse(res);
			data.setIsError(false);
			data.setErrorMessage(Collections.emptyList());
			data.setMessage("Success");
			if (res != null) {
				return new ResponseEntity<CommonRes>(data, HttpStatus.CREATED);
			} else {
				return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
			}
		}
		
		}


